{
	"name": "emacs-region",
	"displayName": "emacs-region",
	"description": "this extension provides region selection like emacs",
	"version": "1.1.0",
	"publisher": "t-yng",
	"engines": {
		"vscode": "^0.10.6"
	},
	 "repository": {
        "type": "git",
        "url": "https://github.com/t-yng/vscode-emacs-region"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/src/extension",
    "contributes": {
        "keybindings": [
            {
                "key": "ctrl+f",
                "command": "cursorRight",
                "when": "editorTextFocus && !inRegionMode"
            },
                        {
                "key": "ctrl+b",
                "command": "cursorLeft",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+p",
                "command": "cursorUp",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+n",
                "command": "cursorDown",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+f",
                "command": "cursorRightSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+b",
                "command": "cursorLeftSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+p",
                "command": "cursorUpSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+n",
                "command": "cursorDownSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "left",
                "command": "cursorLeft",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordStartLeft",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "down",
                "command": "cursorDown",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "right",
                "command": "cursorRight",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordEndRight",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "up",
                "command": "cursorUp",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+a",
                "command": "cursorHome",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+e",
                "command": "cursorEnd",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "ctrl+v",
                "command": "cursorPageDown",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "alt+v",
                "command": "cursorPageUp",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "alt+shift+,",
                "command": "cursorTop",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "alt+shift+.",
                "command": "cursorBottom",
                "when": "editorTextFocus && !inRegionMode"
            },
            {
                "key": "left",
                "command": "cursorLeftSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+left",
                "command": "cursorWordStartLeftSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "down",
                "command": "cursorDownSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "right",
                "command": "cursorRightSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+right",
                "command": "cursorWordEndRightSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "up",
                "command": "cursorUpSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+a",
                "command": "cursorHomeSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+e",
                "command": "cursorEndSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "ctrl+v",
                "command": "cursorPageDownSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "alt+v",
                "command": "cursorPageUpSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "alt+shift+,",
                "command": "cursorTopSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "alt+shift+.",
                "command": "cursorBottomSelect",
                "when": "editorTextFocus && inRegionMode"
            },
            {
                "key": "left",
                "command": "cursorColumnSelectLeft",
                "when": "editorTextFocus && inRegionMode && inColumnRegionMode"
            },
            {
                "key": "down",
                "command": "cursorColumnSelectDown",
                "when": "editorTextFocus && inRegionMode && inColumnRegionMode"
            },
            {
                "key": "right",
                "command": "cursorColumnSelectRight",
                "when": "editorTextFocus && inRegionMode && inColumnRegionMode"
            },
            {
                "key": "up",
                "command": "cursorColumnSelectUp",
                "when": "editorTextFocus && inRegionMode && inColumnRegionMode"
            },
            {
                "key": "alt+w",
                "command": "emacs.action.clipboardCopyAction"
            },
            {
                "key": "ctrl+w",
                "command": "emacs.action.clipboardCutAction"
            },
            {
                "key": "ctrl+y",
                "command": "emacs.action.clipboardPasteAction"
            },
            {
                "key": "backspace",
                "command": "emacs.deleteLeft",
                "when": "inRegionMode"
            },
            {
                "key": "delete",
                "command": "emacs.deleteRight",
                "when": "inRegionMode"
            },
            {
                "key": "ctrl+g",
                "command": "cancelSelection",
                "when": "editorFocus && editorHasSelection"
            },
            {
                "key": "ctrl+g",
                "command": "emacs.exitRegionMode",
                "when": "inRegionMode"
            },
            {
                "key": "ctrl+space",
                "command": "emacs.startRegionMode",
                "when": "editorFocus"
            },
            {
                "key": "ctrl+x space",
                "command": "emacs.startColumnRegionMode",
                "when": "editorFocus"
            }
        ]
    },
	"scripts": {
		"vscode:prepublish": "node ./node_modules/vscode/bin/compile",
		"compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"typescript": "^1.7.5",
		"vscode": "^0.11.0"
	}
}
